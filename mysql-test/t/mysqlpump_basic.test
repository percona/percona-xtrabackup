
-- source include/not_embedded.inc

--echo #
--echo # WL#7755  mysqlpump: Extend mysqldump functionalities
--echo #

--echo # Test for help
--exec $MYSQL_PUMP --help > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
--remove_file $MYSQLTEST_VARDIR/tmp/db1_basic.sql

--echo #
--echo # Test all existing options
--echo #

CREATE DATABASE db1_basic;
USE db1_basic;
CREATE TABLE t1 (a INT);
CREATE TABLE t2 (a INT, b VARCHAR(10), primary key(a));
CREATE TABLE t3 (`a"b"` char(2));
CREATE TABLE t4 (
  name VARCHAR(64) NOT NULL,
  value FLOAT DEFAULT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  comment VARCHAR(1024) DEFAULT NULL,
  PRIMARY KEY (name)
);

CREATE TABLE t5 (
  id int(11) NOT NULL,
  id2 tinyint(3) NOT NULL,
  PRIMARY KEY (id),
  KEY index2 (id2)
);

CREATE TABLE t6 (`x"z"` INT, xyz VARCHAR(20), notes TEXT);
ALTER TABLE t6 ADD INDEX t6_index (`x"z"`, xyz, notes(3));

CREATE TABLE t7 (
  PS_PARTKEY int(11) NOT NULL,
  PS_SUPPKEY int(11) NOT NULL,
  PS_AVAILQTY int(11) NOT NULL,
  PS_SUPPLYCOST float NOT NULL,
  PS_COMMENT varchar(199) NOT NULL
);

ALTER TABLE t7 ADD PRIMARY KEY (PS_PARTKEY,PS_SUPPKEY);

CREATE TABLE t8 (
  c_id INT(11) NOT NULL AUTO_INCREMENT,
  c_name VARCHAR(255) NOT NULL,
  c_description text,
  PRIMARY KEY (c_id)
);

CREATE TABLE t9 (
  v_id INT(11) NOT NULL AUTO_INCREMENT,
  v_name VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (v_id)
);

CREATE TABLE t10 (
  p_id INT(11) NOT NULL AUTO_INCREMENT,
  p_name VARCHAR(355) NOT NULL,
  p_price decimal(10,0) DEFAULT NULL,
  c_id INT(11) NOT NULL,
  PRIMARY KEY (p_id),
  KEY fk_t8 (c_id),
  CONSTRAINT t10_ibfk_1 FOREIGN KEY (c_id) REFERENCES t8 (c_id) ON UPDATE CASCADE
);

CREATE TABLE t11 (
   num int PRIMARY KEY,
   FOREIGN KEY (num) REFERENCES t9 (v_id)
);

ALTER TABLE t10 ADD COLUMN v_id INT NOT NULL AFTER c_id;
ALTER TABLE t10 ADD FOREIGN KEY fk_t9(v_id) REFERENCES
      t9(v_id) ON DELETE NO ACTION ON UPDATE CASCADE;

CREATE TABLE t12 (
  ID bigint NOT NULL DEFAULT '0',
  v bigint NOT NULL,
  PRIMARY KEY (ID,v)
);

CREATE TABLE t13 (
  ID bigint NOT NULL DEFAULT '0',
  k varchar(30) NOT NULL DEFAULT '',
  v bigint NOT NULL,
  PRIMARY KEY (ID, v, k),
  CONSTRAINT relation_tags_ibfk_1 FOREIGN KEY (ID, v) REFERENCES t12 (ID,v)
);

INSERT INTO t4  (name) VALUES ('disk_temptable_create_cost');
INSERT INTO t4  (name) VALUES ('disk_temptable_row_cost');
INSERT INTO t4  (name) VALUES ('key_compare_cost');
INSERT INTO t4  (name) VALUES ('memory_temptable_create_cost');
INSERT INTO t4  (name) VALUES ('memory_temptable_row_cost');
INSERT INTO t4  (name) VALUES ('row_evaluate_cost');

# store table value before backup
SELECT last_update INTO @val1 FROM t4 WHERE name= 'disk_temptable_create_cost';
SELECT last_update INTO @val2 FROM t4 WHERE name= 'disk_temptable_row_cost';
SELECT last_update INTO @val3 FROM t4 WHERE name= 'key_compare_cost';
SELECT last_update INTO @val4 FROM t4 WHERE name= 'memory_temptable_create_cost';
SELECT last_update INTO @val5 FROM t4 WHERE name= 'memory_temptable_row_cost';
SELECT last_update INTO @val6 FROM t4 WHERE name= 'row_evaluate_cost';

INSERT INTO t1 VALUES (289), (298), (234), (456), (789);
INSERT INTO t2 VALUES (1, "on"), (2, "off"), (10, "pol"), (12, "meg");
INSERT INTO t3 VALUES ("1\""), ("\"2");

CREATE VIEW v1 AS SELECT * FROM t2;
CREATE VIEW v2 AS SELECT * FROM t1;
CREATE VIEW v3 AS SELECT v1.*,v2.a as X FROM v1,v2;
CREATE VIEW v11 AS SELECT * FROM v3;

CREATE TEMPORARY TABLE t14 (id INT);

CREATE TRIGGER trig1 BEFORE INSERT ON t1 FOR EACH ROW SET NEW.a = 1;
CREATE TRIGGER trig2 BEFORE UPDATE ON t1 FOR EACH ROW SET NEW.a = 999;

CREATE EVENT ev1 ON SCHEDULE AT '2030-01-01 00:00:00' DO SET @a=5;
CREATE EVENT ev2 ON SCHEDULE EVERY 5 HOUR DO SELECT 1;

DELIMITER |;
CREATE PROCEDURE t_cache()
BEGIN
  SET @A= 20;
  SELECT * FROM t1;
  SELECT * FROM t1;
  PREPARE x FROM 'SELECT 1';
  SELECT * FROM t1;
  SELECT * FROM t1;
END ;|
DELIMITER ;|

DELIMITER |;
CREATE FUNCTION f1 () RETURNS int
BEGIN
SET NAMES 'big5';
RETURN (SELECT COUNT(*) FROM t1);
END ;|
DELIMITER ;|

SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES
       WHERE TABLE_SCHEMA='db1_basic' AND TABLE_TYPE= 'BASE TABLE'
       ORDER BY TABLE_NAME;
SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES
       WHERE TABLE_SCHEMA='db1_basic' AND TABLE_TYPE= 'VIEW'
       ORDER BY TABLE_NAME;
SELECT ROUTINE_NAME FROM INFORMATION_SCHEMA.ROUTINES
       WHERE ROUTINE_SCHEMA='db1_basic' AND ROUTINE_TYPE= 'PROCEDURE'
       ORDER BY ROUTINE_NAME;
SELECT ROUTINE_NAME FROM INFORMATION_SCHEMA.ROUTINES
       WHERE ROUTINE_SCHEMA='db1_basic' AND ROUTINE_TYPE= 'FUNCTION'
       ORDER BY ROUTINE_NAME;
SELECT EVENT_NAME FROM INFORMATION_SCHEMA.EVENTS
       WHERE EVENT_SCHEMA='db1_basic' ORDER BY EVENT_NAME;
SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS
       WHERE TRIGGER_SCHEMA='db1_basic' ORDER BY TRIGGER_NAME;

--echo # Check if all objects are dumped
--exec $MYSQL_PUMP --databases db1_basic > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/db1_basic.sql
--remove_file $MYSQLTEST_VARDIR/tmp/db1_basic.sql

SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES
       WHERE TABLE_SCHEMA='db1_basic' AND TABLE_TYPE= 'BASE TABLE'
       ORDER BY TABLE_NAME;
SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES
       WHERE TABLE_SCHEMA='db1_basic' AND TABLE_TYPE= 'VIEW'
       ORDER BY TABLE_NAME;
SELECT ROUTINE_NAME FROM INFORMATION_SCHEMA.ROUTINES
       WHERE ROUTINE_SCHEMA='db1_basic' AND ROUTINE_TYPE= 'PROCEDURE'
       ORDER BY ROUTINE_NAME;
SELECT ROUTINE_NAME FROM INFORMATION_SCHEMA.ROUTINES
       WHERE ROUTINE_SCHEMA='db1_basic' AND ROUTINE_TYPE= 'FUNCTION'
       ORDER BY ROUTINE_NAME;
SELECT EVENT_NAME FROM INFORMATION_SCHEMA.EVENTS
       WHERE EVENT_SCHEMA='db1_basic' ORDER BY EVENT_NAME;
SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS
       WHERE TRIGGER_SCHEMA='db1_basic' ORDER BY TRIGGER_NAME;

# restore and check the values
SELECT 1 FROM db1_basic.t4 WHERE name= 'disk_temptable_create_cost' AND last_update = @val1;
SELECT 2 FROM db1_basic.t4 WHERE name= 'disk_temptable_row_cost' AND last_update = @val2;
SELECT 3 FROM db1_basic.t4 WHERE name= 'key_compare_cost' AND last_update = @val3;
SELECT 4 FROM db1_basic.t4 WHERE name= 'memory_temptable_create_cost' AND last_update = @val4;
SELECT 5 FROM db1_basic.t4 WHERE name= 'memory_temptable_row_cost' AND last_update = @val5;
SELECT 6 FROM db1_basic.t4 WHERE name= 'row_evaluate_cost' AND last_update = @val6;

--echo # test for skip-triggers
--exec $MYSQL_PUMP --databases db1_basic --skip-triggers > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/db1_basic.sql
--remove_file $MYSQLTEST_VARDIR/tmp/db1_basic.sql

#report 0 rows
SHOW TRIGGERS FROM db1_basic;

--echo # test for skip-events
--exec $MYSQL_PUMP --databases db1_basic --skip-events > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/db1_basic.sql
--remove_file $MYSQLTEST_VARDIR/tmp/db1_basic.sql

#report 0 rows
SHOW EVENTS FROM db1_basic;
DROP DATABASE db1_basic;

CREATE DATABASE db1_basic;
USE db1_basic;
CREATE TABLE t0 (`b` blob);
INSERT INTO `t0` VALUES (0x602010000280100005E71A);
--exec $MYSQL_PUMP --skip-extended-insert --hex-blob --databases db1_basic > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;

CREATE DATABASE db1_basic;
USE db1_basic;
DROP TABLE IF EXISTS `t0`;
CREATE TABLE `t0` (a INT);
INSERT INTO `t0` VALUES (1),(2),(3);
INSERT INTO `t0` VALUES (4),(5),(6);
--exec $MYSQL_PUMP --insert-ignore --databases db1_basic > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;

CREATE DATABASE db1_basic;
USE db1_basic;
DROP TABLE IF EXISTS `t0`;
CREATE TABLE `t0` (a int);
INSERT INTO `t0` VALUES (1),(2),(3);
--exec $MYSQL_PUMP --add-drop-database --databases db1_basic > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;

--echo # test for complete-insert
CREATE DATABASE db1_basic;
USE db1_basic;
CREATE TABLE t0 ( a INT, b VARCHAR(10), c TIMESTAMP DEFAULT CURRENT_TIMESTAMP );
INSERT INTO t0(a,b) VALUES (1, 'temptable'), (2, 'temptable');
INSERT INTO t0(a,b) VALUES (3, ''), (4, NULL);
--exec $MYSQL_PUMP --complete-insert --extended-insert=0 --databases db1_basic > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;

CREATE DATABASE db1_basic;
USE db1_basic;
CREATE TABLE t0 ( a INT );
CREATE TABLE t2 ( a INT );
INSERT INTO t0 VALUES (1), (2);
INSERT INTO t2 VALUES (1), (2);

SELECT * FROM t0 ORDER BY a;
SELECT * FROM t2 ORDER BY a;
--exec $MYSQL_PUMP --skip-dump-rows db1_basic > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/db1_basic.sql
--remove_file $MYSQLTEST_VARDIR/tmp/db1_basic.sql
USE db1_basic;
SELECT * FROM t0 ORDER BY a;
SELECT * FROM t2 ORDER BY a;
DROP DATABASE db1_basic;

CREATE DATABASE db1_basic;
USE db1_basic;
CREATE TABLE t0 (c1 INT);
CREATE TABLE t2 (c1 INT);
INSERT INTO t0 VALUES (1), (2), (3);
INSERT INTO t2 VALUES (1), (2), (3);
--exec $MYSQL_PUMP --single-transaction --databases db1_basic --default-parallelism=0 > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/db1_basic.sql
--remove_file $MYSQLTEST_VARDIR/tmp/db1_basic.sql
USE db1_basic;
SELECT * FROM t0;
SELECT * FROM t2;
DROP DATABASE db1_basic;

--echo #
--echo # Test view dependencies
--echo #

CREATE DATABASE db1_basic;
USE db1_basic;
CREATE TABLE t1 (a1 INT);
CREATE TABLE t2 (a1 INT, b1 VARCHAR(10), primary key(a1));

CREATE DATABASE db3_basic;
USE db3_basic;
CREATE TABLE t1 (a3 INT);
CREATE TABLE t2 (a3 INT, b3 VARCHAR(10), primary key(a3));
CREATE VIEW v1 AS SELECT * FROM db1_basic.t2;

CREATE DATABASE db2_basic;
USE db2_basic;
CREATE TABLE t1 (a2 INT);
CREATE TABLE t2 (a2 INT, b2 VARCHAR(10), primary key(a2));
CREATE VIEW v1 AS SELECT * FROM db1_basic.t2;
CREATE VIEW v2 AS SELECT * FROM db3_basic.t1;

CREATE DATABASE db4_basic;
USE db4_basic;
CREATE TABLE t1 (a4 INT);
CREATE TABLE t2 (a4 INT, b4 VARCHAR(10), primary key(a4));
CREATE VIEW v1 AS SELECT * FROM db1_basic.t2,db3_basic.t1;
CREATE VIEW v2 AS SELECT * FROM db2_basic.t1,db1_basic.t2;

SHOW CREATE VIEW db3_basic.v1;
SHOW CREATE VIEW db2_basic.v1;
SHOW CREATE VIEW db2_basic.v2;
SHOW CREATE VIEW db4_basic.v1;
SHOW CREATE VIEW db4_basic.v2;

#dump all dbs
--exec $MYSQL_PUMP --exclude-databases=mysql,mtr > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;
DROP DATABASE db2_basic;
DROP DATABASE db3_basic;
DROP DATABASE db4_basic;
#restore all dbs
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/db1_basic.sql
--remove_file $MYSQLTEST_VARDIR/tmp/db1_basic.sql

SHOW CREATE VIEW db3_basic.v1;
SHOW CREATE VIEW db2_basic.v1;
SHOW CREATE VIEW db2_basic.v2;
SHOW CREATE VIEW db4_basic.v1;
SHOW CREATE VIEW db4_basic.v2;

# test with default-parallelism=0
--exec $MYSQL_PUMP --default-parallelism=0 --exclude-databases=mysql,mtr > $MYSQLTEST_VARDIR/tmp/db1_basic.sql
DROP DATABASE db1_basic;
DROP DATABASE db2_basic;
DROP DATABASE db3_basic;
DROP DATABASE db4_basic;
#restore all dbs
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/db1_basic.sql
--remove_file $MYSQLTEST_VARDIR/tmp/db1_basic.sql

SHOW CREATE VIEW db3_basic.v1;
SHOW CREATE VIEW db2_basic.v1;
SHOW CREATE VIEW db2_basic.v2;
SHOW CREATE VIEW db4_basic.v1;
SHOW CREATE VIEW db4_basic.v2;

DROP DATABASE db1_basic;
DROP DATABASE db2_basic;
DROP DATABASE db3_basic;
DROP DATABASE db4_basic;

#echo
#echo Bug #21628662 MYSQLPUMP SHOULD EXIT FOR ALL INCOMPATIBLE
#echo                OPTION COMBINATIONS
#echo

# default parallelism > 1
--error 1
--exec $MYSQL_PUMP --add-locks
--error 1
--exec $MYSQL_PUMP --single-transaction
--error 1
--exec $MYSQL_PUMP --add-locks --parallel-schemas=1:db1
--error 1
--exec $MYSQL_PUMP --single-transaction --parallel-schemas=1:db1

# parallel schema threads > 1
--error 1
--exec $MYSQL_PUMP --add-locks --parallel-schemas=5:db1 --default-parallelism=0
--error 1
--exec $MYSQL_PUMP --single-transaction --parallel-schemas=13:db1 --default-parallelism=0

#echo
#echo Bug #21644479 MYSQLPUMP DECOMPRESSION UTILITIES NOT BUILT
#echo

CREATE DATABASE bug21644479;
USE bug21644479;
CREATE TABLE t1 (a INT);
CREATE TABLE t2 (a INT, b VARCHAR(10), primary key(a));
CREATE TABLE t3 (`a"b"` char(2));
CREATE TABLE t4 (
  name VARCHAR(64) NOT NULL,
  value FLOAT DEFAULT NULL,
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  comment VARCHAR(1024) DEFAULT NULL,
  PRIMARY KEY (name)
);

CREATE TABLE t5 (
  id int(11) NOT NULL,
  id2 tinyint(3) NOT NULL,
  PRIMARY KEY (id),
  KEY index2 (id2)
);

SHOW TABLES;
INSERT INTO t1 VALUES (289), (298), (234), (456), (789);
INSERT INTO t2 VALUES (1, "on"), (2, "off"), (10, "pol"), (12, "meg");
INSERT INTO t3 VALUES ("1\""), ("\"2");

INSERT INTO t4  (name) VALUES ('disk_temptable_create_cost');
INSERT INTO t4  (name) VALUES ('disk_temptable_row_cost');

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;
SELECT * FROM t3 ORDER BY 1;
SELECT name FROM t4 ORDER BY 1;
SELECT * FROM t5 ORDER BY 1;

--echo # compress using lz4
--exec $MYSQL_PUMP --databases bug21644479 --compress-output=lz4 --result-file=$MYSQLTEST_VARDIR/tmp/bug21644479.lz4
--echo # uncompress using lz4_decompress
--exec $LZ4_DECOMPRESS $MYSQLTEST_VARDIR/tmp/bug21644479.lz4 $MYSQLTEST_VARDIR/tmp/bug21644479_lz4.sql
DROP DATABASE bug21644479;
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/bug21644479_lz4.sql

USE bug21644479;
SHOW TABLES;
SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;
SELECT * FROM t3 ORDER BY 1;
SELECT name FROM t4 ORDER BY 1;
SELECT * FROM t5 ORDER BY 1;

--echo # compress using zlib
--exec $MYSQL_PUMP --databases bug21644479 --compress-output=zlib --result-file=$MYSQLTEST_VARDIR/tmp/bug21644479.zlib
--echo # uncompress using zlib_decompress
--exec $ZLIB_DECOMPRESS $MYSQLTEST_VARDIR/tmp/bug21644479.zlib $MYSQLTEST_VARDIR/tmp/bug21644479_zlib.sql
DROP DATABASE bug21644479;
--exec $MYSQL < $MYSQLTEST_VARDIR/tmp/bug21644479_zlib.sql

USE bug21644479;
SHOW TABLES;
SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;
SELECT * FROM t3 ORDER BY 1;
SELECT name FROM t4 ORDER BY 1;
SELECT * FROM t5 ORDER BY 1;

# cleanup
DROP DATABASE bug21644479;
--remove_file $MYSQLTEST_VARDIR/tmp/bug21644479_lz4.sql
--remove_file $MYSQLTEST_VARDIR/tmp/bug21644479_zlib.sql
--remove_file $MYSQLTEST_VARDIR/tmp/bug21644479.lz4
--remove_file $MYSQLTEST_VARDIR/tmp/bug21644479.zlib
