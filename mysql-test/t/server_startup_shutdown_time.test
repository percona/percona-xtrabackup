# Test to measure the startup and shutdown time
# of the mysql server
# Skip test in embedded mode
--source include/not_embedded.inc
--source include/not_valgrind.inc
# stop server 
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server 
--source include/wait_until_disconnected.inc

# Use new error log file so as to read only test log and not old log of suite

# restart server
--exec echo "restart:" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
# stop server
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server 
--source include/wait_until_disconnected.inc
# restart server
--exec echo "restart:" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
flush logs;

let $s = `SELECT @@global.version_compile_os`;
--exec echo $s > $MYSQLTEST_VARDIR/tmp/os.txt

perl;

   my $dir = $ENV{'MYSQLTEST_VARDIR'};
   my $file1 = 'os.txt';
   open IN_FILE,"<", "$dir/tmp/$file1" or die $! ;
   my @os =  <IN_FILE>;
   my $file = 'mysqld.1.err';
   open IN_FILE,"<", "$dir/log/$file" or die $! ;
   my ($server_shutdown_started_line,$server_down_line) =(undef,undef);
   my ($ready_for_connection_line) = (undef);
   my ($shutdown_start_time,$shutdown_complete_time,$ready_connection_time,$secdiff);
   my $shutdown_complete_pattern="Shutdown complete\n";
   my $shutdown_start_pattern="Normal shutdown";
   my $ready_for_connection_pattern="ready for connections";
   # Set base line values for startup and shutdown
   my ($baseline_startuptime,$baseline_shutdowntime);
   if (($os[0] =~ /solaris/) || ($os[0] =~ /Win/) || ($os[0] =~ /i386/)){
     ($baseline_startuptime,$baseline_shutdowntime) = (15,15);
   } else {
     ($baseline_startuptime,$baseline_shutdowntime) = (5,5);
   } 

  # Subroutine returning difference between two values of the form YYYYMMDDHHMMSS[CC]
  sub delta_time
  {
    my $t ;
    my $RE =
       qr/^(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(?:(\d{2}))?/ ;
         #   ccyy   mm     dd     HH     MM     SS        CC

    sub calc { ( ( ( ( ( $1*365.25 + $2*365.25/12 + $3
                       ) * 24 + $4
                     ) * 60 + $5
                   ) * 60 + $6
                 ) + ($7 or 0)/100
               )
             }

    $_[0] =~ $RE  and  $t -= calc()  and
    $_[1] =~ $RE  and  $t += calc()  and  return $t ;
    return 0;
  }

   my @lines = reverse <IN_FILE>;
   close(IN_FILE);
   foreach my $current_line (@lines) {
      if ($current_line =~ m{$shutdown_start_pattern}) {
         $server_shutdown_started_line = $current_line if (!defined($server_shutdown_started_line));
      }
      if ($current_line =~ m{$shutdown_complete_pattern}) {
         $server_down_line = $current_line if (!defined($server_down_line));
      }
      if ($current_line =~ m{$ready_for_connection_pattern}) {
         $ready_for_connection_line = $current_line if (!defined($ready_for_connection_line));
      }
   }

   sub get_date_form  {
     my @tmpstr=split(' ',shift);
     my $str;
     # For string like 2013-09-03 08:05:27.13 
     if ($tmpstr[1] !~ /T/) {
        $str = $tmpstr[0].$tmpstr[1];
        $str =~ s/\://g;
     }
     
     if ( ($tmpstr[0] =~ /T/i) and ($tmpstr[0] =~ /Z/i)) {
        $str = $tmpstr[0];
        $str =~ s/T//ig;
        $str =~ s/Z//ig;
        $str =~ s/\://g;
        $str =~ s/\-//g;
        # strip microsec part 
        $str =~ s/\.(.*)//ig;
     } 
     return $str;
      
   }
   $shutdown_start_time = get_date_form ($server_shutdown_started_line);
 
   $shutdown_complete_time= get_date_form ($server_down_line);

   $ready_connection_time = get_date_form( $ready_for_connection_line);

   # Gap in seconds - shutdown time
   $secdiff = delta_time ($shutdown_start_time,$shutdown_complete_time);
   
   if ($secdiff > $baseline_shutdowntime) { 
      print "\n--- Fail : Shutdown time $secdiff is more than baseline shutdown time ---\n";
   }else {
      print "\n--- Pass : Shutdown time is less than baseline shutdown time ---\n";
   } 
   $secdiff = delta_time ($shutdown_complete_time,$ready_connection_time);
   if ($secdiff > $baseline_startuptime) { 
      print "\n--- Fail : Startup time $secdiff is more than baseline startup time ---\n";
   }else {
      print "\n--- Pass : Startup time is less than baseline startup time ---\n";
   } 

EOF
