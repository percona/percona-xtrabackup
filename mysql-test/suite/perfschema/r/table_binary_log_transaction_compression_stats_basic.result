*** TRANSACTION: CREATE TABLE t1 (c1 INT UNSIGNED PRIMARY KEY, c2 LONGTEXT)
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY, ZSTD) = 0]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 1]
include/assert.inc [The number of transactions reported is 1]
*** TRANSACTION: INSERT INTO t1 VALUES (2, REPEAT('b', 1000000))
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY, ZSTD) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY) = 2]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 2]
include/assert.inc [The number of transactions reported is 2]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compression percentage is reported correctly.]
*** TRANSACTION: UPDATE t1 SET c2 = 'a' WHERE c1 = 2
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY, ZSTD) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY) = 2]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 2]
include/assert.inc [The number of transactions reported is 3]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compression percentage is reported correctly.]
*** TRANSACTION: DROP TABLE t1
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY, ZSTD) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY) = 2]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 2]
include/assert.inc [The number of transactions reported is 4]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 0]
*** TRANSACTION: CREATE TABLE t1 (c1 INT UNSIGNED PRIMARY KEY, c2 LONGTEXT)
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY, NONE) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 1]
include/assert.inc [The number of transactions reported is 1]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compression percentage is reported correctly.]
*** TRANSACTION: INSERT INTO t1 VALUES (2, REPEAT('b', 1000000))
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY, NONE) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 1]
include/assert.inc [The number of transactions reported is 2]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compression percentage is reported correctly.]
*** TRANSACTION: UPDATE t1 SET c2 = 'a' WHERE c1 = 2
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY, NONE) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 1]
include/assert.inc [The number of transactions reported is 3]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compression percentage is reported correctly.]
*** TRANSACTION: DROP TABLE t1
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY, NONE) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats (BINARY) = 1]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 1]
include/assert.inc [The number of transactions reported is 4]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compressed bytes is larger than last reported value]
include/assert.inc [Uncompressed bytes is larger than last reported value]
include/assert.inc [Compression percentage is reported correctly.]
include/assert.inc [Number of rows in performance_schema.binary_log_transaction_compression_stats = 0]
