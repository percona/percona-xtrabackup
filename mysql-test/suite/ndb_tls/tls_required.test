--source include/have_ndb.inc
--source suite/ndb_tls/include/check_openssl.inc

# Test with RequireTls=true.

# This test uses two NDB cluster connections from the mysql server

# At startup, all nodes have active certificates in std_data/
#
# To refresh these:
#
# mtr --start ndb_tls.basic_mgm_tls    (TO START MGMD)
# Then, in the source tree:
#
#   cd mysql-test/std_data/ndb-tls
#   ndb_sign_keys -C CA-cert.pem -K CA-key.pem -c localhost:13000 \
#    --CA-search-path=. --ndb-tls-search-path=active \
#    --schedule=4000,0,4000,0,4000,0
#
# Then enter the CA passphrase, which is "Stockholm".
#
# Commit the three new cert files, and discard the retired files.
# Then re-record result files for this test and for tls_off_certs.


# Expect 3 certificates
#
 SELECT distinct name, expires, serial FROM ndbinfo.certificates order by name;

## Expect all encrypted links
#
SELECT node_id, remote_node_id, encrypted from ndbinfo.transporters
WHERE status = 'CONNECTED' ORDER BY node_id, remote_node_id;

# Manage some data
Use test;
CREATE TABLE t (i int primary key not null, j int) engine = ndb;
INSERT INTO t VALUES(1, 1);
SELECT * FROM t;
DROP TABLE t;
