CREATE SCHEMA xtest;
CREATE TABLE xtest.data(val VARCHAR(256));
SET GLOBAL mysqlx_compression_algorithms='DEFLATE_STREAM,LZ4_MESSAGE,ZSTD_STREAM';
SET GLOBAL mysqlx_lz4_max_client_compression_level=16;

Verify LZ4_MESSAGE at level 0
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 0]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 1
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 1]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 2
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 2]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 3
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 3]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 4
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 4]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 5
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 5]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 6
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 6]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 7
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 7]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 8
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 8]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 9
=============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 9]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 10
==============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 10]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 11
==============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 11]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 12
==============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 12]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 13
==============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 13]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 14
==============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 14]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 15
==============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 15]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok

Verify LZ4_MESSAGE at level 16
==============================
Verify [Status variable "Mysqlx_compression_level" needs to have a value of 16]
Verify [Status variable "Mysqlx_bytes_received_compressed_payload" needs to be lower than "Mysqlx_bytes_received_uncompressed_frame"]
Mysqlx.Ok {
  msg: "bye!"
}
ok
DROP SCHEMA xtest;
SET GLOBAL mysqlx_lz4_max_client_compression_level=DEFAULT;
SET GLOBAL mysqlx_compression_algorithms=DEFAULT;
