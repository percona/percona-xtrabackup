# ==== Purpose ====
#
# Bug #20592961  'FLUSH LOGS' POST FAULT INJECTION HITS ASSERT `! IS_SET()' AT SQL_ERROR.CC:381
#
# If we inject some fault in binary index file using debug options,
# then 'flush logs' command will hit the assertion failure
# '! is_set()' at sql_error.cc:381. The root cause is that the
# 'flush logs' command missed to handle an 'Bad file descriptor'
# error while flushing io cache.
#
# To fix the problem, handle the 'Bad file descriptor' error
# while flushing io cache in the case.
#
# Steps to reproduce:
# 1) SET GLOBAL debug='d,error_unique_log_filename' to
#    cause 'FLUSH LOGS' error and 'RESET MASTER' error.
# 2) Execute 'FLUSH LOGS' to cause crash.
# 3) Restart and reset the server.
#

# Test in this file is binlog format agnostic, thus no need
# to rerun them for every format.
--source include/have_binlog_format_row.inc
--source include/have_debug.inc
# Do not run the test with valgrind, since the
# server may intentionally crash in the test.
--source include/not_valgrind.inc

--disable_query_log
call mtr.add_suppression("Can't generate a unique log-filename");
call mtr.add_suppression("The server was unable to create a new log file. An incident event has been written to the binary log which will stop the slaves.");
call mtr.add_suppression("MYSQL_BIN_LOG::open failed to generate new file name.");
call mtr.add_suppression("Failed to locate old binlog or relay log files");
call mtr.add_suppression('Attempting backtrace');
call mtr.add_suppression("Either disk is full or file system is read only");
call mtr.add_suppression('Could not open .*');
--enable_query_log
SET GLOBAL binlog_error_action= IGNORE_ERROR;
SET GLOBAL debug='+d,error_unique_log_filename';

--error ER_NO_UNIQUE_LOGFILE
FLUSH LOGS;

# Restart the server to enable binary log.
--source include/restart_mysqld.inc
SET GLOBAL binlog_error_action= IGNORE_ERROR;
SET GLOBAL debug='+d,error_unique_log_filename';

--error ER_NO_UNIQUE_LOGFILE
RESET MASTER;

SET GLOBAL debug='-d,error_unique_log_filename';
SET @@GLOBAL.DEBUG= @debug_save;

--error ER_UNKNOWN_TARGET_BINLOG
RESET MASTER;
SET GLOBAL binlog_error_action= ABORT_SERVER;

--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect

# The following query may cause ER_BINLOG_LOGGING_IMPOSSIBLE error,
# lost connection to MySQL server or succeed. And it does not cause
# assertion failure any more.
--error 0,ER_BINLOG_LOGGING_IMPOSSIBLE,2013
FLUSH LOGS;

# Restart and reset the server
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect
RESET MASTER;
