include/rpl/init_source_replica.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection master]
CREATE TABLE t1 (
a INT PRIMARY KEY
) engine=ndb;
INSERT INTO t1 (a) VALUES (0);
ALTER TABLE t1 ADD COLUMN c0 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (1);
ALTER TABLE t1 ADD COLUMN c1 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (2);
ALTER TABLE t1 ADD COLUMN c2 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (3);
ALTER TABLE t1 ADD COLUMN c3 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (4);
ALTER TABLE t1 ADD COLUMN c4 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (5);
ALTER TABLE t1 ADD COLUMN c5 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (6);
ALTER TABLE t1 ADD COLUMN c6 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (7);
ALTER TABLE t1 ADD COLUMN c7 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (8);
ALTER TABLE t1 ADD COLUMN c8 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (9);
ALTER TABLE t1 ADD COLUMN c9 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (10);
ALTER TABLE t1 ADD COLUMN c10 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (11);
ALTER TABLE t1 ADD COLUMN c11 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (12);
ALTER TABLE t1 ADD COLUMN c12 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (13);
ALTER TABLE t1 ADD COLUMN c13 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (14);
ALTER TABLE t1 ADD COLUMN c14 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (15);
ALTER TABLE t1 ADD COLUMN c15 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (16);
ALTER TABLE t1 ADD COLUMN c16 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (17);
ALTER TABLE t1 ADD COLUMN c17 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (18);
ALTER TABLE t1 ADD COLUMN c18 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (19);
ALTER TABLE t1 ADD COLUMN c19 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (20);
ALTER TABLE t1 ADD COLUMN c20 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (21);
ALTER TABLE t1 ADD COLUMN c21 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (22);
ALTER TABLE t1 ADD COLUMN c22 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (23);
ALTER TABLE t1 ADD COLUMN c23 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (24);
ALTER TABLE t1 ADD COLUMN c24 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (25);
ALTER TABLE t1 ADD COLUMN c25 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (26);
ALTER TABLE t1 ADD COLUMN c26 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (27);
ALTER TABLE t1 ADD COLUMN c27 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (28);
ALTER TABLE t1 ADD COLUMN c28 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (29);
ALTER TABLE t1 ADD COLUMN c29 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (30);
ALTER TABLE t1 ADD COLUMN c30 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (31);
ALTER TABLE t1 ADD COLUMN c31 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (32);
ALTER TABLE t1 ADD COLUMN c32 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (33);
ALTER TABLE t1 ADD COLUMN c33 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (34);
ALTER TABLE t1 ADD COLUMN c34 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (35);
ALTER TABLE t1 ADD COLUMN c35 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (36);
ALTER TABLE t1 ADD COLUMN c36 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (37);
ALTER TABLE t1 ADD COLUMN c37 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (38);
ALTER TABLE t1 ADD COLUMN c38 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (39);
ALTER TABLE t1 ADD COLUMN c39 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (40);
ALTER TABLE t1 ADD COLUMN c40 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (41);
ALTER TABLE t1 ADD COLUMN c41 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (42);
ALTER TABLE t1 ADD COLUMN c42 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (43);
ALTER TABLE t1 ADD COLUMN c43 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (44);
ALTER TABLE t1 ADD COLUMN c44 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (45);
ALTER TABLE t1 ADD COLUMN c45 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (46);
ALTER TABLE t1 ADD COLUMN c46 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (47);
ALTER TABLE t1 ADD COLUMN c47 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (48);
ALTER TABLE t1 ADD COLUMN c48 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (49);
ALTER TABLE t1 ADD COLUMN c49 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (50);
ALTER TABLE t1 ADD COLUMN c50 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (51);
ALTER TABLE t1 ADD COLUMN c51 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (52);
ALTER TABLE t1 ADD COLUMN c52 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (53);
ALTER TABLE t1 ADD COLUMN c53 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (54);
ALTER TABLE t1 ADD COLUMN c54 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (55);
ALTER TABLE t1 ADD COLUMN c55 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (56);
ALTER TABLE t1 ADD COLUMN c56 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (57);
ALTER TABLE t1 ADD COLUMN c57 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (58);
ALTER TABLE t1 ADD COLUMN c58 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (59);
ALTER TABLE t1 ADD COLUMN c59 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (60);
ALTER TABLE t1 ADD COLUMN c60 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (61);
ALTER TABLE t1 ADD COLUMN c61 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (62);
ALTER TABLE t1 ADD COLUMN c62 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (63);
ALTER TABLE t1 ADD COLUMN c63 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (64);
ALTER TABLE t1 ADD COLUMN c64 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (65);
ALTER TABLE t1 ADD COLUMN c65 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (66);
ALTER TABLE t1 ADD COLUMN c66 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (67);
ALTER TABLE t1 ADD COLUMN c67 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (68);
ALTER TABLE t1 ADD COLUMN c68 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (69);
ALTER TABLE t1 ADD COLUMN c69 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (70);
ALTER TABLE t1 ADD COLUMN c70 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (71);
ALTER TABLE t1 ADD COLUMN c71 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (72);
ALTER TABLE t1 ADD COLUMN c72 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (73);
ALTER TABLE t1 ADD COLUMN c73 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (74);
ALTER TABLE t1 ADD COLUMN c74 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (75);
ALTER TABLE t1 ADD COLUMN c75 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (76);
ALTER TABLE t1 ADD COLUMN c76 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (77);
ALTER TABLE t1 ADD COLUMN c77 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (78);
ALTER TABLE t1 ADD COLUMN c78 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (79);
ALTER TABLE t1 ADD COLUMN c79 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (80);
ALTER TABLE t1 ADD COLUMN c80 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (81);
ALTER TABLE t1 ADD COLUMN c81 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (82);
ALTER TABLE t1 ADD COLUMN c82 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (83);
ALTER TABLE t1 ADD COLUMN c83 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (84);
ALTER TABLE t1 ADD COLUMN c84 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (85);
ALTER TABLE t1 ADD COLUMN c85 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (86);
ALTER TABLE t1 ADD COLUMN c86 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (87);
ALTER TABLE t1 ADD COLUMN c87 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (88);
ALTER TABLE t1 ADD COLUMN c88 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (89);
ALTER TABLE t1 ADD COLUMN c89 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (90);
ALTER TABLE t1 ADD COLUMN c90 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (91);
ALTER TABLE t1 ADD COLUMN c91 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (92);
ALTER TABLE t1 ADD COLUMN c92 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (93);
ALTER TABLE t1 ADD COLUMN c93 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (94);
ALTER TABLE t1 ADD COLUMN c94 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (95);
ALTER TABLE t1 ADD COLUMN c95 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (96);
ALTER TABLE t1 ADD COLUMN c96 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (97);
ALTER TABLE t1 ADD COLUMN c97 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (98);
ALTER TABLE t1 ADD COLUMN c98 INT COLUMN_FORMAT DYNAMIC;
INSERT INTO t1 (a) VALUES (99);
ALTER TABLE t1 ADD COLUMN c99 INT COLUMN_FORMAT DYNAMIC;
include/rpl/sync_to_replica.inc
# Show replica settings
# - small binlog, auto purge on and purge after one second
max_binlog_size: 4096
auto_purge: ON
expire_seconds: 1
# Check that there are no rows in ndb_binlog_index without
# corresponding binlog, this is in two steps by first building a
# table from the output of SHOW BINARY LOGS and then comparing
# that table with ndb_binlog_index
# 1. Build binlogs table from output of SHOW BINARY LOGS
CREATE TEMPORARY TABLE binlogs(
num INT PRIMARY KEY AUTO_INCREMENT,
name varchar(512) NOT NULL
);
# 2. Compare binlogs table with ndb_binlog_index to check
# that no orphan rows exist, the query should return no rows.
[connection master]
DROP TABLE t1;
include/rpl/sync_to_replica.inc
include/rpl/deinit.inc
