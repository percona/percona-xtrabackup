# This test runs ndb_rpl.ndb_rpl_log_updates but first sets a debug flag,
# which triggers a failure if the NDB data node sent an update to a
# server that does not log replica updates on the binlog
Connecting to server.4
SELECT @@global.log_replica_updates;
@@global.log_replica_updates
0
SET @@GLOBAL.DEBUG= '+d,test_log_replica_updates_filter';
Connecting to server.5
SELECT @@global.log_replica_updates;
@@global.log_replica_updates
0
SET @@GLOBAL.DEBUG= '+d,test_log_replica_updates_filter';
Running test ndb_rpl_log_updates
include/rpl/init.inc [topology=1->6,2->3,5->7]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
include/rpl/connect.inc [creating source.1]
include/rpl/connect.inc [creating source.2]
include/rpl/connect.inc [creating replica.3]
include/rpl/connect.inc [creating source.4]
include/rpl/connect.inc [creating source.5]
include/rpl/connect.inc [creating replica.6]
include/rpl/connect.inc [creating replica.7]
[connection source.1]
CREATE TABLE t1 (k INT PRIMARY KEY, c CHAR) ENGINE = NDB;
INSERT INTO t1 VALUES (1, 'a');
# Sync the replication topology (propagates the table to all clusters)
include/rpl/sync.inc
[connection source.2]
INSERT INTO t1 VALUES (2, 'b');
[connection source.4]
SET sql_log_bin= OFF;
INSERT INTO t1 VALUES (3, 'c');
SET sql_log_bin= ON;
INSERT INTO t1 VALUES (4, 'd');
[connection source.5]
INSERT INTO t1 VALUES (5, 'e');
# Sync the replication topology (propagates the data changes)
include/rpl/sync.inc
[connection replica.3]
SELECT * FROM t1 ORDER BY k;
k	c
1	a
2	b
3	c
4	d
5	e
[connection source.4]
SELECT * FROM t1 ORDER BY k;
k	c
1	a
2	b
3	c
4	d
5	e
[connection source.5]
SELECT * FROM t1 ORDER BY k;
k	c
1	a
2	b
3	c
4	d
5	e
[connection replica.7]
# Must not have k = 3
SELECT * FROM t1 ORDER BY k;
k	c
1	a
2	b
4	d
5	e
[connection replica.6]
# Must not have k = 3
SELECT * FROM t1 ORDER BY k;
k	c
1	a
2	b
4	d
5	e
Cleanup
[connection source.1]
DROP TABLE t1;
include/rpl/deinit.inc
SET @@GLOBAL.DEBUG=@saved_debug;
SET @@GLOBAL.DEBUG=@saved_debug;
