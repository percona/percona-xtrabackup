# ==== PURPOSE ====
#
# This test is check whether a direct application of the binary log is
# possible with the multithreaded applier (MTA) in case some of binlog file
# end with Stop Event instead of Rotation event. Direct application of the
# binary log means that we set up replication to read binary logs instead
# of relay logs generated by the IO thread.
#
# ==== REQUIREMENTS ====
#
# Server shall provide functionality to directly apply binlog files by the
# multithreaded applier.
#
# ==== IMPLEMENTATION ====
#
# In this test we check that MTA logical clock state is correctly updated
# in case preceding binlog file ends with the Stop Event.
#
# T1.
#     Test steps:
#
#     1. On server_1: generate few transactions. Restart the server.
#        Generate more transactions
#     2. Copy generated binlog and index files into the server_2 data directory
#     3. Restart the server_2 with adjusted relay log and relay log index
#        filenames
#     4. Apply binlog files with MTA on server_2
#     5. Wait for expected gtid set on server_2
#
#     Test pass conditions:
#
#     - Applier applies binlog files without errors (GTID executed set matches
#       expected GTID set)
#
# ==== REFERENCES ====
#
# Bug#36061197 SQL thread fails with error MY-001755 when executed with
#              parallel applier
#

# This test does not depend on binlog format
--source include/have_binlog_format_row.inc

--let $rpl_server_count= 2
--let $rpl_topology= none
--source include/rpl/init.inc

--let $source_uuid= `SELECT @@GLOBAL.SERVER_UUID`

--echo
--echo # 1. On server_1: generate few transactions. Restart the server.
--echo #    Generate more transactions
--echo

CREATE TABLE t (a INT);
INSERT INTO t VALUES (NULL), (NULL), (NULL);
INSERT INTO t VALUES (NULL), (NULL), (NULL);
--let $rpl_server_number= 1
--source include/rpl/restart_server.inc
INSERT INTO t VALUES (NULL), (NULL), (NULL);
INSERT INTO t VALUES (NULL), (NULL), (NULL);
DROP TABLE t;

--source include/rpl/save_server_position.inc

--echo
--echo # 2. Copy generated binlog and index files into the server_2 data
--echo #    directory
--echo

--copy_file $server_1_datadir/master-bin.000001 $server_2_datadir/binlog.000001
--copy_file $server_1_datadir/master-bin.000002 $server_2_datadir/binlog.000002
--copy_file $server_1_datadir/master-bin.index $server_2_datadir/binlog-pitr.index
--exec perl -pi.bak -e "s/master-bin/binlog/g" $server_2_datadir/binlog-pitr.index

--echo
--echo # 3. Restart the server_2 with adjusted relay log and relay log index
--echo #    filenames
--echo

--let $rpl_server_number= 2
--let $rpl_server_parameters=--relay-log-index=binlog.index --relay-log=binlog
--source include/rpl/restart_server.inc

--echo
--echo # 4. Apply binlog files with MTA on server_2
--echo

--let $rpl_connection_name= server_2
--source include/connection.inc

CHANGE REPLICATION SOURCE TO RELAY_LOG_FILE='binlog.000001', RELAY_LOG_POS=4, SOURCE_HOST='dummy', SOURCE_USER='root' FOR CHANNEL 'pitr';
START REPLICA SQL_THREAD FOR CHANNEL 'pitr';

--echo
--echo # 5. Wait for expected gtid set on server_2
--echo

--source include/rpl/sync_with_saved.inc

--let $rpl_channel_name= 'pitr'
--source include/rpl/stop_replica.inc
--let $rpl_channel_name=
RESET REPLICA ALL FOR CHANNEL 'pitr';

# Clean up
--remove_file $server_2_datadir/binlog-pitr.index.bak

--let $rpl_skip_sync = 1
--source include/rpl/deinit.inc
