##########################################################################
# Test script to test UPGRADE from older version table (not) having
# INSTANT ADD columns.
##########################################################################

--source include/not_valgrind.inc
--source include/have_lowercase0.inc

# ------------------------------------------------------------
# Tables created on 8.0.28 with following (specific to this test)
# ------------------------------------------------------------
#  Create table t1_redundant (c1 char(10), c2 char(10)) ROW_FORMAT=REDUNDANT;
#  Insert into t1_redundant values ("r1c1", "r1c2");
#  Select * from t1_redundant;
#  Alter table t1_redundant add column c3 char(10) default "c3_def", algorithm=instant;
#  Insert into t1_redundant values ("r2c1", "r2c2", "r2c3");
#  Select * from t1_redundant;
#  Alter table t1_redundant add column c4 char(10) default "c4_def", algorithm=instant;
#  Insert into t1_redundant values ("r3c1", "r3c2", "r3c3", "r3c4");
#  Select * from t1_redundant;
#
#  Create table t1_dynamic (c1 char(10), c2 char(10)) ROW_FORMAT=DYNAMIC;
#  Insert into t1_dynamic values ("r1c1", "r1c2");
#  Select * from t1_dynamic;
#  Alter table t1_dynamic add column c3 char(10) default "c3_def", algorithm=instant;
#  Insert into t1_dynamic values ("r2c1", "r2c2", "r2c3");
#  Select * from t1_dynamic;
#  Alter table t1_dynamic add column c4 char(10) default "c4_def", algorithm=instant;
#  Insert into t1_dynamic values ("r3c1", "r3c2", "r3c3", "r3c4");
#  Select * from t1_dynamic;
#
#  Create table t1_compact (c1 char(10), c2 char(10)) ROW_FORMAT=COMPACT;
#  Insert into t1_compact values ("r1c1", "r1c2");
#  Select * from t1_compact;
#  Alter table t1_compact add column c3 char(10) default "c3_def", algorithm=instant;
#  Insert into t1_compact values ("r2c1", "r2c2", "r2c3");
#  Select * from t1_compact;
#  Alter table t1_compact add column c4 char(10) default "c4_def", algorithm=instant;
#  Insert into t1_compact values ("r3c1", "r3c2", "r3c3", "r3c4");
#  Select * from t1_compact;
#
#  Create table t2_redundant (c1 char(10), c2 char(10))  ROW_FORMAT=REDUNDANT;
#  Insert into t2_redundant values ("r1c1", "r1c2");
#  Select * from t2_redundant;
#  Alter table t2_redundant add column c3 char(10) default "c3_def", algorithm=INSTANT;
#  Insert into t2_redundant values ("r2c1", "r2c2", "r2c3");
#  Select * from t2_redundant;
#
#  Create table t2_dynamic (c1 char(10), c2 char(10)) ROW_FORMAT=DYNAMIC;
#  Insert into t2_dynamic values ("r1c1", "r1c2");
#  Select * from t2_dynamic;
#  Alter table t2_dynamic add column c3 char(10) default "c3_def", algorithm=INSTANT;
#  Insert into t2_dynamic values ("r2c1", "r2c2", "r2c3");
#  Select * from t2_dynamic;
#
#  Create table t2_compact (c1 char(10), c2 char(10)) ROW_FORMAT=COMPACT;
#  Insert into t2_compact values ("r1c1", "r1c2");
#  Select * from t2_compact;
#  Alter table t2_compact add column c3 char(10) default "c3_def", algorithm=INSTANT;
#  Insert into t2_compact values ("r2c1", "r2c2", "r2c3");
#  Select * from t2_compact;
#
# Exact queries at end of file
# ------------------------------------------------------------

--echo #########
--echo # SETUP #
--echo #########

--echo # Stop the running the server
--source include/shutdown_mysqld.inc

--echo # Copy and unzip the datadir.
--copy_file $MYSQLTEST_VARDIR/std_data/instant_ddl/data_instant_ddl_upgrade_8_4_3.zip $MYSQL_TMP_DIR/data_instant_ddl_upgrade_8_4_3.zip
--file_exists $MYSQL_TMP_DIR/data_instant_ddl_upgrade_8_4_3.zip
--exec unzip -qo $MYSQL_TMP_DIR/data_instant_ddl_upgrade_8_4_3.zip -d $MYSQL_TMP_DIR
let $DATADIR = $MYSQL_TMP_DIR/data;

--echo # Restart the server against the unzipped datadir
--replace_result $DATADIR DATADIR
--let $restart_parameters = restart: --datadir=$DATADIR --innodb-page-size=16k
--let $wait_counter=3000
--source include/start_mysqld.inc

--echo ##############################################
--echo # Test instant ADD/DROP COLUMN for REDUNDANT format
--echo ##############################################
let $row_format = redundant;
--source suite/innodb/include/instant_ddl_upgrade.inc

--echo ############################################
--echo # Test instant ADD/DROP COLUMN for DYNAMIC format
--echo ############################################
let $row_format = dynamic;
--source suite/innodb/include/instant_ddl_upgrade.inc

--echo ############################################
--echo # Test instant ADD/DROP COLUMN for COMPACT format
--echo ############################################
let $row_format = compact;
--source suite/innodb/include/instant_ddl_upgrade.inc

--echo ###########
--echo # CLEANUP #
--echo ###########

--echo # Shutdown server
--source include/shutdown_mysqld.inc

--echo # Remove copied files
--file_exists $MYSQL_TMP_DIR/data_instant_ddl_upgrade_8_4_3.zip
--force-rmdir $MYSQL_TMP_DIR/data
--remove_file $MYSQL_TMP_DIR/data_instant_ddl_upgrade_8_4_3.zip

--echo # Restarting server to restore server state
let $restart_parameters =;
--source include/start_mysqld.inc

# Exact queries
# -------------
# Create table t1 (c1 char(10), c2 char(10), c3 char(10));
# Insert into t1 values ("r1c1", "r1c2", "r1c3");
# SELECT * from t1;
# 
# Create table t2 (c1 char(10), c2 char(10), c3 char(10));
# Insert into t2 values ("r1c1", "r1c2", "r1c3");
# SELECT * from t2;
# 
# Create table t3 (c1 char(10), c2 char(10));
# Insert into t3 values ("r1c1", "r1c2");
# SELECT * from t3;
# ALTER table t3 add column c3 char(10) DEFAULT NULL, algorithm=instant;
# SELECT * from t3;
# ALTER table t3 add column c4 char(10) DEFAULT "c4_def", algorithm=instant;
# SELECT * from t3;
# 
# CREATE TABLE t1_part (c1 INT, c2 CHAR(10))
#   PARTITION BY RANGE(c1) (
#     PARTITION p0 VALUES LESS THAN (100),
#     PARTITION p1 VALUES LESS THAN (200));
# INSERT INTO t1_part VALUES(10, "r1c2");
# 
# CREATE TABLE t2_part (c1 INT, c2 CHAR(10))
#   PARTITION BY RANGE(c1) (
#     PARTITION p0 VALUES LESS THAN (100),
#     PARTITION p1 VALUES LESS THAN (200));
# INSERT INTO t2_part VALUES(10, "r1c2");
# 
# CREATE TABLE t3_part (c1 INT, c2 CHAR(10))
#   PARTITION BY RANGE(c1) (
#     PARTITION p0 VALUES LESS THAN (100),
#     PARTITION p1 VALUES LESS THAN (200));
# INSERT INTO t3_part VALUES(10, "r1c2");
# ALTER TABLE t3_part ADD COLUMN c3 CHAR(10) DEFAULT "def_c3", ALGORITHM=INSTANT;
# INSERT INTO t3_part VALUES(110, "r1c2", "c3");
# ALTER TABLE t3_part ADD PARTITION (PARTITION p2 VALUES LESS THAN (300));
# ALTER TABLE t3_part ADD COLUMN c4 CHAR(10) DEFAULT "def_c4", ALGORITHM=INSTANT;
# 
# Create table t1_redundant (c1 char(10), c2 char(10)) ROW_FORMAT=REDUNDANT;
# Insert into t1_redundant values ("r1c1", "r1c2");
# Select * from t1_redundant;
# Alter table t1_redundant add column c3 char(10) default "c3_def", algorithm=instant;
# Insert into t1_redundant values ("r2c1", "r2c2", "r2c3");
# Select * from t1_redundant;
# Alter table t1_redundant add column c4 char(10) default "c4_def", algorithm=instant;
# Insert into t1_redundant values ("r3c1", "r3c2", "r3c3", "r3c4");
# Select * from t1_redundant;
# 
# Create table t1_dynamic (c1 char(10), c2 char(10)) ROW_FORMAT=DYNAMIC;
# Insert into t1_dynamic values ("r1c1", "r1c2");
# Select * from t1_dynamic;
# Alter table t1_dynamic add column c3 char(10) default "c3_def", algorithm=instant;
# Insert into t1_dynamic values ("r2c1", "r2c2", "r2c3");
# Select * from t1_dynamic;
# Alter table t1_dynamic add column c4 char(10) default "c4_def", algorithm=instant;
# Insert into t1_dynamic values ("r3c1", "r3c2", "r3c3", "r3c4");
# Select * from t1_dynamic;
# 
# Create table t1_compact (c1 char(10), c2 char(10)) ROW_FORMAT=COMPACT;
# Insert into t1_compact values ("r1c1", "r1c2");
# Select * from t1_compact;
# Alter table t1_compact add column c3 char(10) default "c3_def", algorithm=instant;
# Insert into t1_compact values ("r2c1", "r2c2", "r2c3");
# Select * from t1_compact;
# Alter table t1_compact add column c4 char(10) default "c4_def", algorithm=instant;
# Insert into t1_compact values ("r3c1", "r3c2", "r3c3", "r3c4");
# Select * from t1_compact;
# 
# Create table t2_redundant (c1 char(10), c2 char(10))  ROW_FORMAT=REDUNDANT;
# Insert into t2_redundant values ("r1c1", "r1c2");
# Select * from t2_redundant;
# Alter table t2_redundant add column c3 char(10) default "c3_def", algorithm=INSTANT;
# Insert into t2_redundant values ("r2c1", "r2c2", "r2c3");
# Select * from t2_redundant;
# 
# Create table t2_dynamic (c1 char(10), c2 char(10)) ROW_FORMAT=DYNAMIC;
# Insert into t2_dynamic values ("r1c1", "r1c2");
# Select * from t2_dynamic;
# Alter table t2_dynamic add column c3 char(10) default "c3_def", algorithm=INSTANT;
# Insert into t2_dynamic values ("r2c1", "r2c2", "r2c3");
# Select * from t2_dynamic;
# 
# Create table t2_compact (c1 char(10), c2 char(10)) ROW_FORMAT=COMPACT;
# Insert into t2_compact values ("r1c1", "r1c2");
# Select * from t2_compact;
# Alter table t2_compact add column c3 char(10) default "c3_def", algorithm=INSTANT;
# Insert into t2_compact values ("r2c1", "r2c2", "r2c3");
# Select * from t2_compact;
#
# Upgrade to 8.4.3 and zip data directory
# -------------------------
