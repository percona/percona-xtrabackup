--source include/have_binlog_format_row.inc
--source include/not_rpl_gtid_only.inc
--source include/rpl/init_source_replica.inc

--source include/rpl/connection_replica.inc
#
# Testing how well MSR handles initialization failures.
# Specifically it's proved that a failure to initialize mi in one of
# the channels allows RESET REPLICA, no crash happens.
#

# The default channel and channel 'ch_a' will connect to the same master
CALL mtr.add_suppression("A replica with the same server_uuid/server_id as this replica has connected to the source");
CALL mtr.add_suppression("Error during --relay-log-recovery.*");
CALL mtr.add_suppression("Server was not able to find a rotate event from source server.*");
CALL mtr.add_suppression("Recovery from source pos.* and file");

--source include/rpl/stop_replica.inc

--replace_result $MASTER_MYPORT SOURCE_PORT
eval CHANGE REPLICATION SOURCE TO SOURCE_HOST='localhost', SOURCE_USER='root', SOURCE_PORT=$MASTER_MYPORT FOR CHANNEL 'ch_a';
CHANGE REPLICATION SOURCE TO SOURCE_HOST='dummy_host', SOURCE_USER='root', SOURCE_PORT=13010 FOR CHANNEL 'ch_b';
START REPLICA;

STOP REPLICA FOR CHANNEL 'ch_a';

# --relay-log-recovery is a source of the following mi initialization failure
--let $rpl_server_number= 2
--let $rpl_server_parameters= --skip-replica-start
--source include/rpl/restart_server.inc

--source include/rpl/connection_replica.inc
RESET REPLICA ALL;

--let $rpl_skip_sync= 1
--let $rpl_only_running_threads= 1
--source include/rpl/deinit.inc
