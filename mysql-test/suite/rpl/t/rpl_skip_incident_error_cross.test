# ==== Purpose ====
#
# Verify that we can skip an incident event without a GTID by setting
# --replica-skip-errors=1590 on cross-version replication.
#
# ==== Implementation ====
#
# 1. a single statement on non-transactional table causes to log an incident
#    event withiout a GTID due to the fact that the stmt_cache is not big
#    enough to accommodate the changes.
#
# 2. sync slave sql with master to verify that we can skip the incident event
#    by setting --replica-skip-errors=1590 on slave.
#
# ==== References ====
#
# Bug #26266758  SKIPPING MYSQL SLAVE ERROR CODE 1590 (ER_REPLICA_INCIDENT) DOES NOT WORK
# See mysql-test/suite/rpl/t/rpl_skip_incident_error.test

--source include/not_group_replication_plugin.inc
# Test in this file is binlog format agnostic, thus no need
# to rerun it for every format.
--source include/have_binlog_format_row.inc
--source include/force_myisam_default.inc
--source include/have_myisam.inc
--source include/have_debug.inc
--source include/rpl/init_source_replica.inc

call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
call mtr.add_suppression("Replica SQL for channel '': The incident LOST_EVENTS occurred on the source.");
call mtr.add_suppression("Non-transactional changes were not written to the binlog. An incident event has been written to the binary log which will stop the replicas.");

--let $old_max_binlog_stmt_cache_size= query_get_value(SHOW VARIABLES LIKE "max_binlog_stmt_cache_size", Value, 1)
--let $old_binlog_stmt_cache_size= query_get_value(SHOW VARIABLES LIKE "binlog_stmt_cache_size", Value, 1)
SET GLOBAL max_binlog_stmt_cache_size = 4096;
SET GLOBAL binlog_stmt_cache_size = 4096;

--let $debug_point= simulate_write_trans_without_gtid
--source include/add_debug_point.inc

--disconnect master
--connect(master,127.0.0.1,root,,test,$MASTER_MYPORT,)
--let $data= `SELECT CONCAT('"', repeat('a',2000), '"')`

CREATE TABLE t1(c1 INT PRIMARY KEY, data TEXT(30000)) ENGINE=MyIsam;

--let $saved_master_pos=query_get_value('SHOW BINARY LOG STATUS', Position, 1)
--echo #
--echo # A single statement on non-transactional table causes to log an incident
--echo # event without a GTID due to the fact that the stmt_cache is not big
--echo # enough to accommodate the changes.
--echo #
--disable_query_log
--error ER_STMT_CACHE_FULL, ER_ERROR_ON_WRITE
eval INSERT INTO t1 (c1, data) VALUES (1,
       CONCAT($data, $data, $data, $data, $data, $data));
--enable_query_log
--let $binlog_start= $saved_master_pos
# Set this option to prove that there is no GTID generated
# for the incident event.
--let $keep_gtid_events= 1
--source include/rpl/deprecated/show_binlog_events.inc


--echo #
--echo # Verify that we can skip the incident event by setting
--echo # --replica-skip-errors=1590 on slave.
--echo #
--source include/rpl/sync_to_replica.inc

# Cleanup
--source include/rpl/connection_source.inc
DROP TABLE t1;

--let $debug_point= simulate_write_trans_without_gtid
--source include/remove_debug_point.inc

--replace_result $old_max_binlog_stmt_cache_size ORIGINAL_VALUE
--eval SET GLOBAL max_binlog_stmt_cache_size= $old_max_binlog_stmt_cache_size
--replace_result $old_binlog_stmt_cache_size ORIGINAL_VALUE
--eval SET GLOBAL binlog_stmt_cache_size= $old_binlog_stmt_cache_size

--source include/rpl/deinit.inc
