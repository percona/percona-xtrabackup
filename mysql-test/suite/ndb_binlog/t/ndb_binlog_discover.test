-- source include/have_ndb.inc
-- source include/have_binlog_format_mixed_or_row.inc
-- source include/have_multi_ndb.inc

--echo #
--echo # Bug#14516 Restart of cluster can cause NDB API replication failure
--echo # Unreported bug: Online altered table causes system restart to fail
--echo #

--echo # Setup
create table t2 (a int key) engine=ndb;

--echo # Rename table to later verify that the system restart did not fail
alter table t2 rename t1;

--echo # System restart
reset master;
--exec $NDB_MGM --no-defaults -e "all restart -n" > /dev/null
--exec $NDB_WAITER --no-defaults --not-started > /dev/null
--exec $NDB_MGM --no-defaults -e "all start" > /dev/null
--exec $NDB_WAITER --no-defaults > /dev/null

--echo # Wait for 'server1' to complete setup and get out of read-only mode
--source include/ndb_not_readonly.inc

connection server2;
--echo # Wait for 'server2' to complete setup and get out of read-only mode
--source include/ndb_not_readonly.inc
connection server1;

--echo # Insert data into t1
insert into t1 values(1);

--echo # Check that data went in ok
select * from t1;

--echo # Verify that the replication API is working properly.
--echo # The binlog should have the insert event.
--source include/show_binlog_events.inc
PURGE MASTER LOGS TO 'binlog.000002';
--source include/wait_for_ndb_committed_to_binlog.inc
--source include/show_binlog_events.inc

--echo # Cleanup
drop table t1;

# Ignore the warning generated by ndbcluster's binlog thread
# when cluster is restarted
--disable_query_log ONCE
call mtr.add_suppression("cluster disconnect An incident event has been written");

# Ignore the warning generated by ndbcluster's binlog thread
# when cluster is restarted - also on the second mysqld
connection server2;
--disable_query_log ONCE
call mtr.add_suppression("cluster disconnect An incident event has been written");
