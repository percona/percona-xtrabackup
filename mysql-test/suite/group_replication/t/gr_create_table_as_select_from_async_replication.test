################################################################################
# Validate the behaviour of 'CREATE TABLE ... AS SELECT' coming from an async
# replication channel to group replication.
#
# Bug#36784284 - Secondary fails when executing a CREATE TABLE SELECT from
#                an async channel
#
# 1. Setup Group Replication on server 1 and 2.
# 2. Setup a asynchronous replication connection from server 3
#    into group (server 1)
# 3. Execute CREATE TABLE ... SELECT statements on server 3.
# 4. Wait until transactions executed on server 3 are applied on group.
#    Secondary should not fail when executing a CREATE TABLE SELECT.
# 5. Clean-up
################################################################################

--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--let $rpl_server_count= 3
--source include/group_replication.inc

--echo # Bug#36784284 - Secondary fails when executing a CREATE TABLE SELECT from
--echo #                an async channel

--echo
--echo ############################################################
--echo #  1. Setup Group Replication on server 1 and 2.
--let $rpl_connection_name= server1
--source include/connection.inc
--source include/start_and_bootstrap_group_replication.inc

--let $rpl_connection_name= server2
--source include/connection.inc
--source include/start_group_replication.inc

--let $group_replication_number_of_members= 2
--source include/gr_wait_for_number_of_members.inc


--echo
--echo ############################################################
--echo #  2. Setup a asynchronous replication connection from server 3
--echo #     into group (server 1)
--let $rpl_connection_name= server1
--source include/connection.inc
--replace_result $SERVER_MYPORT_3 SERVER_3_PORT
--eval CHANGE REPLICATION SOURCE TO SOURCE_HOST="127.0.0.1", SOURCE_USER="root", SOURCE_PASSWORD="", SOURCE_PORT=$SERVER_MYPORT_3, SOURCE_AUTO_POSITION=1, REQUIRE_TABLE_PRIMARY_KEY_CHECK=OFF, REQUIRE_ROW_FORMAT=1  FOR CHANNEL ""
--source include/rpl/start_replica.inc

--echo
--echo ############################################################
--echo #  3. Execute CREATE TABLE ... SELECT statements on server 3.
--let $rpl_connection_name= server3
--source include/connection.inc

CREATE TABLE t1 (c1 INT, c2 VARCHAR(80),PRIMARY KEY (c1));
CREATE TABLE t2 (PRIMARY KEY (c1)) AS SELECT * FROM t1;

INSERT INTO t1 VALUES (1, 'aaaa');
CREATE TABLE t3 (PRIMARY KEY (c1)) AS SELECT * FROM t1;

--echo
--echo ############################################################
--echo #  4. Wait until transactions executed on server 3 are
--echo #     applied on group.
--let $sync_slave_connection= server1
--source include/rpl/sync_to_replica.inc

--let $rpl_connection_name= server3
--source include/connection.inc
--let $sync_slave_connection= server2
--source include/rpl/sync_to_replica.inc

--echo
--echo ############################################################
--echo #  5. Cleanup
--let $rpl_connection_name= server3
--source include/connection.inc
DROP TABLE t1, t2, t3;

--let $sync_slave_connection= server1
--source include/rpl/sync_to_replica.inc

--let $rpl_connection_name= server3
--source include/connection.inc
--let $sync_slave_connection= server2
--source include/rpl/sync_to_replica.inc

--let $rpl_connection_name= server1
--source include/connection.inc
--source include/rpl/stop_replica.inc
CHANGE REPLICATION SOURCE TO SOURCE_AUTO_POSITION=0 FOR CHANNEL "";

--source include/group_replication_end.inc
