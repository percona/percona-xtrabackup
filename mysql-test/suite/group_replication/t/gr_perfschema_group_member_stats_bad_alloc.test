################################################################################
# Bug#30112711 : LET QUERY WHICH ACCESSES P_S TO FAIL, WHEN MEMORY ALLOCATION IS
#                FAILED.
#
# This test verifies that the std::bad_alloc exception is handled properly,
# when thrown while adding rows to the
# performance_schema.replication_group_member_stats table.
#
# Test:
# 1. Get row from performance_schema.replication_group_member_stats
#    for current member. It will return one row
# 2. Simulate bad_alloc exception for
#    performance_schema.replication_group_member_stats table by
#    enabling flow_control_simulate_bad_alloc_exception debug sync point.
# 3. Get row from performance_schema.replication_group_member_stats.
#    It will fail with ER_STD_BAD_ALLOC_ERROR error as
#    flow_control_simulate_bad_alloc_exception debug sync point was
#    activated.
# 4. Disable flow_control_simulate_bad_alloc_exception debug sync point.
# 5. Verify that member is still ONLINE
# 6. Verify number of members in the group are still same
# 7. Clean Up
################################################################################

--source include/have_group_replication_plugin.inc
--source include/have_debug.inc
--source include/group_replication.inc


--echo
--echo # 1. Get row from performance_schema.replication_group_member_stats
--echo #    for current member. It will return one row
--let $server_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)
--let $count_num= query_get_value(SELECT COUNT(*) COUNT from performance_schema.replication_group_member_stats where member_id in (SELECT @@server_uuid), COUNT, 1)
--let $assert_text= The value of member_id should not be empty before starting group replication
--let $assert_cond= "$count_num" = "1"
--source include/assert.inc


--echo
--echo # 2. Simulate bad_alloc exception for
--echo #    performance_schema.replication_group_member_stats table by
--echo #    enabling flow_control_simulate_bad_alloc_exception debug sync point.
SET SESSION DEBUG='+d,flow_control_simulate_bad_alloc_exception';


--echo
--echo # 3. Get row from performance_schema.replication_group_member_stats.
--echo #    It will fail with ER_STD_BAD_ALLOC_ERROR error as
--echo #    flow_control_simulate_bad_alloc_exception debug sync point was
--echo #    activated.
--error ER_STD_BAD_ALLOC_ERROR
SELECT COUNT(*) from performance_schema.replication_group_member_stats;


--echo
--echo # 4. Disable flow_control_simulate_bad_alloc_exception debug sync point.
SET SESSION DEBUG='-d,flow_control_simulate_bad_alloc_exception';


--echo
--echo # 5. Verify that member is still ONLINE
--let $group_replication_member_state= ONLINE
--source include/gr_wait_for_member_state.inc


--echo
--echo # 6. Verify number of members in the group are still same
--let $group_replication_number_of_members= $rpl_server_count
--source include/gr_wait_for_number_of_members.inc


--echo
--echo # 7. Clean Up

--source include/group_replication_end.inc
