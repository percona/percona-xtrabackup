/* DBTransactionHandler represents a database transaction.
*/

var DBTransactionHandler; // Standard members of DBTransactionHandler object


DBTransactionHandler = { 
  autocommit         : null,  // Boolean autocommit mode flag
  dbSession          : null,  // DBSession link for this transaction
  state              : null,  // DBTransactionState applying to the transaction
  success            : null,  // Boolean inidcating success with no errors
  error              : null,  // DBOperationError applying to the transaction
  userCallback       : null,  // A higher-level callback function 
  executedOperations : null,  // List of dbOperations already executed
};


/* setPartitionKey(TableHandler Table, Array partitionKey)
  IMMEDIATE
  
  In NDB, setting the partition key causes the NDB API to select a 
  Transaction Coordinator on the node that would be the primary node
  for a row with that key.
*/
  function setPartitionKey(tableHandler, partitionKey) {}


/* execute(DBOperation[] dbOperationList,
           function(error, DBTransactionHandler) callback)
   ASYNC
   
   Executes the DBOperations in dbOperationList.
   Commits the transaction if autocommit is true.
*/
  function execute(dbOperationList, callback) {}


/* commit(function(error, DBTransactionHandler) callback)
   ASYNC 
   
   Commit work.
*/
  function commit(callback) {}


/* rollback(function(error, DBTransactionHandler) callback)
   ASYNC 
   
   Roll back all previously executed operations.
*/
  function rollback(callback) {}



/* This documentation file is a valid JavaScript module and exports: 
*/
exports.DBTransactionHandler =  DBTransactionHandler;

